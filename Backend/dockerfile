FROM php:8.1-fpm

# Environment variables
ENV USER_NAME=myuser
ENV USER_UID=1000

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    libzip-dev \
    zip \
    unzip \
    redis \
    libpq-dev \
    npm

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-install \
    pdo \
    pdo_pgsql \
    pdo_mysql \
    mbstring \
    exif \
    pcntl \
    bcmath \
    gd \
    zip

# Add Redis extension
RUN pecl install -o -f redis && \
    rm -rf /tmp/pear && \
    docker-php-ext-enable redis

# Get latest Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Set working directory
WORKDIR /var/www

# Create system user to run Composer and Artisan Commands
RUN useradd -G www-data,root -u $USER_UID -d /home/$USER_NAME -s /bin/bash $USER_NAME
RUN mkdir -p /home/$USER_NAME/.composer && \
    chown -R $USER_NAME:$USER_NAME /home/$USER_NAME

# Run composer install
USER root
COPY composer.json composer.lock ./
RUN mkdir -p vendor && \
    chown -R $USER_NAME:$USER_NAME vendor && \
    # sed -i 's/"psr-4": {/"psr-4": {"App\\\\\\\\Models\\\\\\\\Amazon\\\\\\\\": "app\/Models\/Amazon\/",/g' composer.json && \
    su -c "composer install --no-scripts --no-autoloader" -s /bin/bash $USER_NAME

# Copy environment file
COPY .env .env

# Fix environment file permissions
RUN chown $USER_NAME:$USER_NAME .env && \
    chmod 644 .env

# Copy application files
USER $USER_NAME
COPY --chown=$USER_NAME:$USER_NAME . .

# Install npm dependencies and run production build
USER root
RUN mkdir -p /var/www/node_modules && chown -R $USER_NAME:$USER_NAME /var/www
USER $USER_NAME
# RUN npm install && npm run production
