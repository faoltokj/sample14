FROM php:8.1-fpm

# Environment variables
ENV USER_NAME=myuser
ENV USER_UID=1000

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    libzip-dev \
    zip \
    unzip 

# Clear cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-install \
    pdo \
    pdo_mysql \
    mbstring \
    exif \
    pcntl \
    bcmath \
    gd \
    zip

# Add Redis extension
# RUN pecl install -o -f redis && \
#     rm -rf /tmp/pear && \
#     docker-php-ext-enable redis

# Get latest Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Set working directory
WORKDIR /var/www/Backend

# Create system user to run Composer and Artisan Commands
RUN useradd -G www-data,root -u $USER_UID -d /home/$USER_NAME -s /bin/bash $USER_NAME
RUN mkdir -p /home/$USER_NAME/.composer && \
    chown -R $USER_NAME:$USER_NAME /home/$USER_NAME

# Create bootstrap/cache directory and set permissions
RUN mkdir -p bootstrap/cache && \
    chown -R www-data:www-data bootstrap/cache && \
    chmod -R 775 bootstrap/cache

# Copy application files
COPY . .

# Run composer install as the user
RUN composer install --no-scripts --no-autoloader

# Fix ownership and permissions for the vendor directory
RUN chown -R www-data:www-data vendor && \
    chmod -R 775 vendor

# Generate optimized autoloader
RUN composer dump-autoload --optimize --classmap-authoritative

# Expose port 8000 for the Laravel application
EXPOSE 8000

# Run database migrations and seed the database
# RUN php artisan migrate:fresh --seed

# Start the Laravel application
# CMD ["php", "artisan", "serve", "--host=0.0.0.0", "--port=8000"]
